作者：luflying
email: zhang_yng@citiz.net
日期：2000-11-24 11:46:15
一、前言 

长久以来许多工程师们，都一直期盼著一个超大型的计算系统，这系统是由网路上许多机器，从超大型主机乃至嵌入在某些设备上的微小晶片，彼此相互合作而成。所有的工作，都可以在任何时间被分散到网路上的任何地方、任何种类的机器上去处理。这样的系统有很好的弹性，并且可以藉由不断地更新设备，来解决更多问题。 

然而，我们　要一致的语言，以及更强的通讯协定（ superprotocols）等，让网路上众多繁杂的成员，能彼此顺利地沟通。但是就目前的情况，要达到这样的目的很难，因此我们可以考虑把一种特殊的程式码（genetic code）嵌入到许多软硬体之服务中，使得网路上的成员可以轻易的相互分享彼此资源，这就是 Jini 所要达成的目标 [1] 。 

Jini 是由 SUN 公司 R&D 的Bill Joy 所提出的一项技术。我们可以藉著使用Jini，创造出一个富有弹性、容易管理、且可随时随地使用各种服务的网路计算环境。为了让使用者知道网路上有哪些服务可被使用，我们必须建立一个联盟( federation )，让网路上的服务主动加入。当有某个服务加入联盟时，也等於同时向整个网路告知：「我可以被使用，有谁　要我的服务？」。使用者透过联盟，可以得知有哪些服务可以使用。然而，我们要如何才能很简单、很轻易地使用这些服务关於这个问题，也就是 Jini 的工作重点之一。 

让我们来看看Jini 是怎堋做的。网路上的服务要能够成为联盟的一份子，不管是硬体服务也好、软体服务也好，都必须嵌入Jini 的程式码。此外，网路上还必须提供 JVM的环境，才能执行Jini程式以获得这些服务。Jini的程式码是利用 SUN 公司所提供的 Jini package 撰写而成。Jini package使用的语言是Java，并且包含了许多处理网路上资源的相关功能。例如：如何帮助网路服务寻找（discovery）、以及加入（join）联盟；或者帮助网路服务处理分散式的承租（leasing）、交易（ transactions)等的问题。而这些网路服务彼此沟通时，所应用的技术是 RMI（Java Remote Method Invocation ）。简言之，网路上的服务藉由 Jini 所提供的介面，得以相互沟通、合作，来完成使用者的要求。 

