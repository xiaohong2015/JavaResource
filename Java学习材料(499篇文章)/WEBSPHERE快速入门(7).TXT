作者：easyinfonet
email: easyinfonet@sina.com.cn
日期：2001-2-16 11:26:26
3.2 IBM WebSphere Studio
    Web站点的内容是由静态和动态内容组成的。静态内容以HTML、图片等形式出现。除了在客户端的动态效果以外，在一个Web服务器上动态内容通常以服务器端程序的形式存在，它们在被请求时产生动态内容。许多站点已经使用applet来达到在web上的动态效果。虽然这个方法能做到这一点，但是java和网络性能的问题阻碍了这种方法的大规模应用。服务器端生成动态内容在大多数情况下是更好的方法。因为：
    = 更容易支持瘦客户。
    = 提供更大的灵活性和安全性。
    = 在大多数情况下动态内容来自数据库。
    = 服务器端程序可以执行数据库操作，然后向浏览器报告结果。
    服务器端生成动态内容符合瘦客户或超瘦客户设计模式，它使得软件开发者在一个web应用的客户端放尽量少的商务或数据访问逻辑。而胖客户是指在一个应用的客户端放置了太多商务逻辑和访问。这会影响网页的下载时间，可能引起其它问题。服务器端数据库访问是一个好的解决方案，可以更好地利用服务器，从客户减轻客户端的负担。通过Java访问数据库是利用JDBC(Java Database Connectivity)应用编程接口进行的。总之，在为一个网站提供动态内容时，会涉及到服务器端应用程序。CGI和/或Servlets将是典型的部署载体。Servlet是生成动态内容的焦点。然而，大多数动态内容会涉及到数据库。
WebSphere Studio提供了项目工作台和有关向导。项目工作台用来把各种生成的组件集成进一个项目，而各种向导可用来存取数据库、创建JavaBean和servlet等等。
    1．项目工作台
    项目工作台是一个在资源控制管理下的Web站点对象管理工具，其站点管理能力与NetObject Fusion大致雷同。项目工作台具有下列特性：
    (1) 同任何网站开发工具互操作。通过将站点对象的文件类型注册到相关的应用，项目工作台可用来启动应用（工具）来操作（打开，显示）站点对象。从而能有效的管理那些与站点有关的对象资源，与资源控制环境的交互使得Web站点的小组开发得以有效地进行。因此它是能集成很多网站开发工具的理想的工具集成环境。
(2) 提供灵活的站点发布能力。项目工作台为两类对象资源提供各自独立的发布路径，一类是Servlets和JavaBeans，另一类是所有其它的东西。项目工作台提供了网站的本地发布或远程发布两种方式。
WebSphere Studio 有一个双框图形用户界面，还有许多与桌面应用程序相似的功能特性。以下分别介绍框架、分解视图、具栏和按钮、过滤器。 
(1)	 框架
左边的框架显示所选项目及其文件夹的图形分层。右边的框架显示在左边框架中选择的一些项目的细节。
l	一个项目可包含文件和文件夹。 
l	文件夹可包含文件或其它文件夹。 
l	文件包含数据。 
您可以按喜欢的方法来组织文件，并使它容易地将一个项目中的有关文件作为一个单元进行管理，比如，公布一个项目中的若干个文件或所有文件至目标服务器上（如 WebSphere 应用服务器）。 
(2) 分解视图
当您从视图菜单中选择分解视图表，文件夹及子文件夹中的所有文件将显示在详细视图表中。表格包括附加的路径信息以帮助您区分它们。文件夹本身不显示。 快捷方式按钮位于工作台的右下方，您可对分解视图的开或关进行切换。
(3) 工具栏和按钮
此界面包括菜单栏、工具栏、状态栏和过滤器按钮的垂直行。
l	菜单栏允许您访问所有的可用功能。 
l	工具栏允许您快速访问大多数的普通功能和向导。 
l	过滤器通过文件扩展名或文件类型来控制显示文件。 
l	状态栏列出一般信息，例如您的视图的大小和对象的数目，也包括被过滤器隐藏的文件数。 
(4) 过滤器
过滤器按钮位于主窗口的右边。它通过文件类型和文件扩展名来控制哪些文件显示在详细框架中。单击它可进行开和关的切换。打开过滤器，请单击过滤器按钮，在详细视图中将显示此种文件类型的文件。过滤器类别是：HTML 文件、图像文件、SQL 文件、Java 文件、Java 类文件、文本文件。同时要打开多个过滤器，请在单击每个过滤器按钮时按下 Ctrl 键。要暂时关闭所有过滤器，请先从视图菜单中选择“过滤器”，然后选择“显示全部”。
在分解视图上使用过滤器能够管理在分组中选择文件类型的所有文件，而不考虑它们的相对位置。 例如，若要打开一个包含文件夹及子文件夹的项目，但其中只有 HTML 文件， 您就可打开分解视图和 HTML 文件过滤器来显示整个项目中的所有 HTML 文件。

    2．向导
    有关向导及其基本功能如下：
    (1) SQL 向导：创建一个可被数据库访问 Servlet 使用的 SQL 语句。语句可查询关系数据库，并从表中选择数据显示在 Web 页面上。SQL向导要求连接数据库，以验证连接参数，提取元数据来支持SQL语句的开发。
    (2) 数据库访问向导：创建 Servlet 来访问关系数据库。使用一个生成的SQL文件，数据库访问sevlet向导生成5个文件：servlet、servletBean、输入HTML表格、输出页面（JSP）、和可选的错误页面（JSP）。其中，可选的输入表格（HTML）用来为SQL命令传参数，ServletBean提供一个可执行方法来调用SQL命令，Servlet创建那个ServletBean的一个实例，执行它的方法，然后决定调用有关结果页面。 
    (3) 基本 Servlet向导：创建使用指定的 JavaBean（包括 Navigator 和为 VisualAge for Java Enterprise Access Builder 建立 VisualAge 时的命令）的 Servlet。它同时产生一个调用 Servlet 及捕捉用户输入的输入页面和显示结果的输出页面。
    (4) 到期 HTML Servlet向导：创建随日期而更改内容的Servlet。则它生成 Servlet 以及包括 HTML 的变量部分的页面。
    (5) 注册Servlet向导：创建一个可在 WebSphere应用服务器 的 UserProfile 特性中设置或获得数据的Servlet。这使可维护 Web 访问器的详细信息，并且此访问器对于用户注册和其它的 Web 应用程序都是一样的。 向导同时产生一个调用 Servlet 及捕捉用户输入的输入页面和显示结果的输出页面。 
    (6) JavaBean向导：创建能够进行编辑和扩展的JavaBean的基本实现。 指定在 Bean 中所需的属性，向导将创建方法来设置和获得其值。 一旦完成 Bean，就可在基本向导中使用它。 
上述向导对快速地制作用于创建和显示动态内容的中间层（和客户层）元素的原型有用，对提供模板代码来定制有用。而且与WebSphere应用服务器的“编程模型”紧密集成。下面以使用数据库访问向导为例来创建访问数据库的Servlet。数据库访问向导帮助创建Java Servlet，它用来从关系数据库中检索指定数据并在 HTML 页面中显示信息。
    向导需要 SQL 语句文件，Studio SQL 向导将帮助创建它。该 SQL 语句告诉数据库访问 Servlet 连接哪个数据库、搜索哪个表格、选择哪个数据以及如何排序。实际上，无需知道 Java 或 SQL 语法，就可创建数据库访问 Servlet。浏览至想放置 .jsp 文件的文件夹。 
    从“工具”菜单，选择“Studio 向导”。 
   (1) 选择“数据库访问 Servlet”。 
	(2) 单击“下一步”启动向导，继续标记的页面。 
	(3) 当完成所有要求后单击“完成”。 
	(4) 当完成后，可“照原样”使用文件或根据需要进行定制。
    向导将创建：
   (1) 调用 Servlet 的输入页面（.html） 
	(2) 提供实现指定 SQL 语句数据库访问逻辑的 JavaBean 文件（.class 和 .java） 
	(3) 配置 Servlet 的 Servlet 配置文件（.servlet） 
	(4) 包含选中数据库列 JSP 和 HTML 的输出标记的 JSP 文件（.jsp） 
	(5) 按照下列步骤完成数据库访问 Servlet 向导：
    注意：可使用这样的方式建立和测试数据库Servlet，使用某一现有数据库，通过修改 .servlet 配置文件中的一个或多个以下值，将其创建为另一个 Servlet：
    = URL 
    = driver 
    = userID 
    = password 
    此方法可能需要数据库服务器的模式别名。请参阅 Servlet 配置文件，了解更多关于 .servlet 文件的详细信息。
    3．脚本编辑
    IBM WebSphere Studio能与NetObjects ScriptBuilder很好的集成起来。从WebSphere Studio的项目工作台项可以启动ScriptBuilder来对有关文件进行编辑，可编辑的文件类型包括HTML、JavaScript、Java、JSP和XML等。
    NetObjects ScriptBuilder是适合于Web的脚本开发工具，为Web站点的客户端和服务器端脚本提供了一个快速的开发方法。它将强大的脚本编辑器与丰富的可视化开发工具有机结合，以加速脚本的开发。它也是架构Netscape,、Microsoft、 IBM、Sun Microsystems等各大公司的不同Web脚本环境的桥梁。它支持CFML (Cold Fusion Markup Language)、Dynamic HTML、 ECMAScript、 HTML、JSP、Java、LotusScript、ASP、CDF (Channel Definition Format)、DOM (Document Object Model)、Jscript、VBScript、JavaScript、LiveWire、Perl、和WML (Wireless Markup Language)。使用NetObjects ScriptBuilder, 开发者能够：
   (1) 检查脚本的语法错误
	(2) 创建面向对象的脚本组件。
	(3) 访问语言的参考书目
	(4) 使用XML定制语言参考书
	(5) 检查文档与浏览器的兼容性
	(6) 把所需的语言元素拖放到文档中。
	(7) 使用标准的Web语言或其它语言
	(8) 快速导航到嵌入的函数和组件
	(9) 自动化重复性的任务
	(10) 预览文档
