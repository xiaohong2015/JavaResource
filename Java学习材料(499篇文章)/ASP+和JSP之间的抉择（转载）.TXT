作者：罗亭
email: tingluo@263.net
日期：2000-12-7 17:54:24
/*
转自jsp中国论坛
另：Blueski是谁？特此致谢
*/

///***********************************以下为内容
{
Blueski为您编译。
原文名：JSP VS ASP Part 2: The Future According to ASP+
英文作者没有记下，非常抱歉
}

由于我同时是ASP和JSP的程序员，所以正开始写一系列的文章来比较两者的差别，
当我写到一半时，ASP+被宣布了，所以我在重新开始审视这个问题。
我正在做一个JSP项目和一个ASP项目，后者十分有趣，因为它开始是采用ASP3.0，
但当项目结束后我会将转换为ASP+。那时我将可以对ASP+有更近的考察，并提供更好的
ASP+和JSP的比较。本文提供了我对ASP+，以及它对于象我这样的一个普通开发人员会产生的影响做一个初步观察。

通过最初步的比较，我发现：
1) 面向对象性: 
ASP+将C#作为一种面向对象语言，在很多方面来看，C#将成为微软的与Java相似的语言。
C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场份额，那么它将给ASP+带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。
C# 是ASP+开发中一个最重要的功能，微软会将C#发展成为Java的强劲对手。这也是他们.Net框架的一个重要组成部分。我认为C#是微软在编程市场上击败对手的主要工具。我期待着微软能在这个产品后面倾注全力，这样，C#可以成为许多程序员的又一种选择。C#产生的结果是将进一步加固微软和Sun产品的战线。这对用户是有利的，他们可以选择两者之一来开发新的应用。 

2) 数据库连接：
ASP另一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器。因此ASP Web数据库应用开发特别简单。ASP+发展了更多的功能，因为有了ADO+！ADO+带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP+/ADO+出现后这样的差别会更明显。我个人希望SUN应尽快能花大力气来追赶ASP+/ADO+的组合。

3)大型站点应用：
ASP+将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP+可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.Net框架已经充分地提供了这个方法。ASP+提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。
于是ASP+现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP+还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,你需要购买昂贵的应用服务器群来达到同样的目的。

4) ASP+还提供更多的其它方面的新特性，例如：
*内置的对象缓存和页面结果缓存。
*内置的XML支持，可用于XML数据集的简单处理。
*服务器控制提供了更充分的交互式控制。
ASP+确实对ASP进行了较大的发展。

在我审视完ASP+后，我的初步结论是：我未来项目主要还是要采用基于Java/JSP的技术。这有以下三个理由：
1) 要真正发挥ASP+潜力，你要使用C#或vb.net。这两种语言将成为ASP+标准的核心的脚本语言。 这对ASP的未来发展很有好处。我向来不喜欢用当前的Visual Basic来制作com对象。新的ASP+核心脚本语言更能发挥ASP+的价值。
显然，所有这些ASP+的新进展促使我对今后语言选择做一个决定，它将占据我未来的无数时间和努力。 
当Java发展起来时我学习了Java，那时我预感到这将是围绕我未来程序生涯的语言。于是，JSP成为我在web开发中的第一选择。当我目前的ASP项目完成后，我将重新考虑C#是否符合我的编程工具体系。
现在我已经是一个JSP fan，除非微软能够将我整个扭转过去，我猜想我正面临ASP+的巨大挑战。

2) ASP+依然完全锁定在微软的操作系统中。JSP比ASP+拥有更大的范围，它在别的服务器配置中也有很好的伸缩性。虽然Windows 2000 的优越性日益显露，这对开发人员不构成问题。

3) 我并不能确信是否我能认同ASP+结构的各种方面，这需要更深入的分析，所以，我很犹豫。如果我使用了1-2个月，也许会改变看法。总的来说，这需要在一个很高的层次来看待这个beta产品。
作为一个ASP开发人员，ASP+让我停下来反思。未来8个月的ASP新项目将变得很困难。为什么？因为 ASP+和C# 带来了一个难题，它们要到2001年才正式提供。而很多性能方面的要求现在就需要确定。由于ASP+只是一个beta软件，所以现在我的第一个选择反而很简单了。现在的项目就采用ASP3.0。我认为各种beta版的语言都不太可信。

但我不能忽视ASP+,因为它很快就要推出，并代表了ASP的未来。ASP项目的管理者还需要考虑到未来的可平滑移植性及付出的时间代价等。另一个结果则是，这似的在近期使用PHP和JSP来代替ASP变得更可靠一些。
总的来说，
1) 如果使用ASP+，你将花费额外的时间学一些新的工具。
2) 新的工具有待于版本化，所以为什么不先关注于目前存在的东西？
3) ASP+将来会拥有的特性JSP已经拥有。
4) ASP+将你锁定到纯Microsoft的体系中。（我读了一个关于Microsoft将.Net移植到
Linux的故事，但我觉得不太可信。）
最后，我预测会有很多人加入到PHP和JSP的行列。可是，仍然会有一部分人会受到
ASP+给业界带来的激动所感染。(我从没看到一个beta编程产品会带来如此的震撼。)


以下是一篇相关的讨论.net的文章。 

ASP+以自由软件作为开始，现在已经渐渐成为Microsoft的.Net框架的基石之一。
Sun应该从中得到教训。特别注意的是，你需要许可证才能升级到ASP+，因为它和太多的产品集成在一起了。.Net框架太大了。在假定某个产品可以成为真正的产品之前，我通常等待它的第一个service pack。所以，即使ASP+已经在2001第一季度被版本化，我仍然要等到2001第二季度。
当然，因为ASP+ 已经产生了如此的激动人心，一旦推出，很多商店都会马上提供ASP+。
事实上我早已经使用beta版ASP+! 它使用 .aspx 后缀，这使我我感觉Microsoft会在近期推出第一个ASP+的service pack。 


下一年我们将看到在这个巨大的市场上Sun和Microsoft如何展开决斗，而程序员门又将做什么样的选择呢？