作者：随意
日期：00-4-28 20:53:30
JSP基本语法 
讲完安装问题后，现在进入来讨论JSP语法。一个投机取巧的办法是下载语法卡片。如果你不熟悉Java编程，也许你想看一下Sun的指南 。然而网页创建者并不需要进行太多的Java开发。除了一些方法调用，在你的JSP网页里应尽可能少用Java代码。 

记住以上提示，我们首先来看一看JSP指令和脚本元素，之后我们会解释JavaBeans和隐含对象。共有五种JSP指令和脚本元素。在JSP 1.0版中，大部分JSP被一个以“<%” 开头和以“%>”结尾的的标记括在其中。在更新的JSP 1.1规范出台后，就有了与XML兼容的版本。 

JSP指令和脚本元素 
  Directives <%@ directive %> 
  Declarations <%! declaration %> 
  Expressions <%= expression %> 
  Code Fragment/Scriptlet <% code fragment %> 
  Comments <%-- comment --%> 



指令
JSP指令是为JSP引擎而设计的。他们并不直接产生任何可见输出，而只是告诉引擎如何处理其余JSP页面。这些指令始终被括在 “<%@ ?%>”标记中。两个最重要的指令是“pagePage”和“Include”。“Taglib”指令不在讨论之列，但是在用JSP1.1创建自定义标记可以使用它。 

几乎在所有JSP页面顶部都会看到“Page”指令。尽管不是必须的，但它可以让你指定： 
到何处查找起支持作用的Java类别： 
<%@ page import="java.util.Date" %>, 

出现Java运行问题时，将网上冲浪者引向何处：
<%@ page errorPage="errorPage.jsp" %>, 



还有你是否需要管理用户的会话级信息，这些信息可能来自多个网页（在下面的JavaBeans一节将对此做进一步讲）述： 
<%@ page session="true" %>. 



“Include”指令可以把你的内容分成更多可管理的元素，比如包括一个普通页面页眉或页脚的元素。包含的网页可以是一个固定的HTML 页面或更多的JSP内容：
<%@ include file="filename.jsp" %>

声明
JSP声明用来让你定义页面级变量，以保存信息或定义JSP页面的其余部分可能需要的支持方法。如果你发现代码太多，通常最好把它们写成一个独立的Java类别。声明一般都在“<%! ?%>”标记中。一定要以分号（；）结束变量声明，因为任何内容都必须是有效的Java语句：
<%! int i=0; %>。 

表达式
有了JSP表达式，表达式评估结果会被转换成一个字符串，并且被直接包括在输出页面之内。JSP 表达式包含在“<%= ?%>” 标记中，没有分号，除非在加引号的字符串部分使用分号。 


<%= i %>
<%= "Hello" %> .

代码片段/脚本片段
代码片段/脚本片段（Scriptlets） JSP代码片段或脚本片段是嵌在“<% ?%>”标记中的。这种Java代码在Web服务器响应请求时就会运行。在脚本片段周围可能是原始的HTML或XML语句，在这些地方，代码片段可以使你创建条件执行代码，或要用到另外一段代码的代码。例如，以下的代码组合使用表达式和代码片段，显示H1、H2、H3和H4标记中的字符串“Hello”。代码片段并不局限于一行源代码： 

<% for (int i=1; i<=4; i++) { %>
<H<%=i%>>Hello</H<%=i%>>
<% } %>.

注释
最后一个主要的JSP元素是嵌入式注释。尽管你始终可以在文件中加入HTML注释，但用户在查看页面源代码时会看到这些注释。如果你不想让用户看到它，你就应该将其嵌入“<%-- ?--%>” 标记中： 

<%-- comment for server side only --%>.
