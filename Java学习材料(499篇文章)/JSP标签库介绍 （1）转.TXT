作者：zhang_yu
日期：2001-2-27 14:59:54
作者: Casey Kochmer / 翻译：廖铮 
日期: 2001年02月27日 


<!―还不太了解Java Servlet Page的强大功能？那好，不妨跟我一道看看JSP最令人瞩目的强大工具之一：JSP标签库。-->

笔者使用JSP和ASP从事编程工作也有很长一段时间了，我越来越觉得，在这两种服务器端编程解决方案中，JSP的功能要比ASP强大得多。我为什么要把JSP选作自己主要的服务器端应用程序编写工具呢？当然，JSP迷人的特性和功能不少，但标签库是让我做出这一决定的最重要诱因之一。

为什么这样说呢？原因有两个：维护和开发速度。服务器端脚本语言其实就像是开发Internet的熔炉。在一个服务器页面上，你可以很方便地混合各种不同的脚本方法和对象。这种页面简直就是建筑Web的混凝土。正是这种“材料”的混合给予了服务器端脚本强大的信息处理能力。它可以让服务器端程序设计人员开发出动态的、灵活的Web页面。但是，另一方面，脚本的自由混合却很难得到维护，特别是随着项目规模的不断增长而显得尤其严重。我们将不得不让有经验的程序员来建立和维护最终产品，结果让这些程序员成为了一般的Web设计人员。服务器端应用程序在最终的图形设计和实现这两方面上就弱化了。更糟糕的是，因为这些页面对代码而言变得很复杂，开发速度也就相应降低了。最后，许多中等规模或者大型的服务器端Web应用程序很晚才得以推出而且成本也无法控制。此外，在实现了这些应用程序之后，许多销售商还必须去寻找合格的程序员来维护这种乱得如同一盆意大利面条似的代码。

我们谁都不愿意看到这样的结果，所以，为了克服这个问题，ASP引进了COM对象技术，而JSP则提供了J2EE作为对策。这些解决方案都是建立在集中的、可重用代码库的机制之上。但是，他们使用起来可就太难了，耗费的时间也很多。还有，这些解决方案并没有减少建立混乱代码的诱惑，结果，我们只能组织起大型的、内部结构良好的开发团队来使用这些技术。这就意味着，尽管我们目前都已经有了建立大型项目的以上方法，中等规模的项目却没有被这些技术所光顾。

可现实是，中等规模的项目才是Web应用程序中的主体部分。所以，许多项目不得不面对其开发和维护环境不能满足其需要的局面。

幸好，JSP为我们提供了解决这一问题的最佳方案，标签库（Tag libraries）提供了建立可重用代码块的简单方式。但是和COM和J2EE不同的是，你不需要掌握任何额外的技能就可以建立标签库：如果你会编写JSP页面，你就会建立标签库。最后，标签库还改进了Web应用程序的维护性。这种对维护性的改进表现在：轻易地在JSP页面上就实现了基于XML的可定制接口。结果可想而知，Web设计人员可以建立JSP Web应用程序而无需知道JSP是怎么回事。这样一来，Web开发就成为一项非常富有效率的团队开发任务了。JSP程序员可以建立定制的标签和后端代码模块，而Web设计人员则可以使用定制标签并且全力关注于Web设计本身。标签库解决了代码混乱的问题，而且做得干净漂亮（事实上，XML才是解决这些问题的本质所在，但是标签库还是起到了相当关键的作用）。


